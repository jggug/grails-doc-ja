{hidden}As mentioned before a flow has a defined start and end state. A start state is the state which is entered when a user first initiates a conversation (or flow). The start state of a Grails flow is the first method call that takes a block. For example: {hidden}
前述したように、Webフローでは明示された開始と終了ステートも持っています。開始ステートは、ユーザが最初に対話(またはフロー)を開始するステートです。最初のブロックのメソッドコールがGrailsフローの開始ステートです:

{code:java}
class BookController {
   ...
   def shoppingCartFlow() {
       showCart {
           on("checkout").to "enterPersonalDetails"
           on("continueShopping").to "displayCatalogue"
       }
       ...
       displayCatalogue {
           redirect(controller: "catalogue", action: "show")
       }
       displayInvoice()
   }
}
{code}

{hidden}Here the @showCart@ node is the start state of the flow. Since the showCart state doesn't define an action or redirect it is assumed be a [view state|guide:actionStatesAndViewStates] that, by convention, refers to the view  @grails-app/views/book/shoppingCart/showCart.gsp@.{hidden}
この例でのフローの開始ステートは@showCart@ノードになります。showCartがアクションまたリダイレクトを定義していない場合は、慣習により@grails-app/views/book/shoppingCart/showCart.gsp@を参照して表示する[ビューステート|guide:actionStatesAndViewStates]として見なされます。


{hidden}Notice that unlike regular controller actions, the views are stored within a directory that matches the name of the flow: @grails-app/views/book/shoppingCart@.{hidden}
通常のコントローラアクションと違い、ビューファイルはフロー名称のディレクトリに配置された物にマッチします:@grails-app/views/book/shoppingCart@

{hidden}The @shoppingCart@ flow also has two possible end states. The first is @displayCatalogue@ which performs an external redirect to another controller and action, thus exiting the flow. The second is @displayInvoice@ which is an end state as it has no events at all and will simply render a view called @grails-app/views/book/shoppingCart/displayInvoice.gsp@ whilst ending the flow at the same time. {hidden}
この@shoppingCart@フローには、２つの終了ステートがあります。一つ目のステートは、外部のコントローラアクションにリダイレクトしてフローから出る@displayCatalogue@。二つ目のステートは、何もイベント処理が無く単純に、ビューの@grails-app/views/book/shoppingCart/displayInvoice.gsp@を描写して同時にフローを終了する、@displayInvoice@です。

{hidden}Once a flow has ended it can only be resumed from the start state, in this case @showCart@, and not from any other state.{hidden}
フローが終了したら、開始フローのみから再開できます。この例では@showCart@になります。
