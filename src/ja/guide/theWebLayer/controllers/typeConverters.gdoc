h3. Type Conversion Methods

If you prefer to avoid the overhead of [Data Binding|guide:dataBinding] and simply want to convert incoming parameters (typically Strings) into another more appropriate type the [params|controllers] object has a number of convenience methods for each type:

{code}
def total = params.int('total')
{code}

The above example uses the @int@ method, and there are also methods for @boolean@, @long@, @char@, @short@ and so on. Each of these methods is null-safe and safe from any parsing errors, so you don't have to perform any additional checks on the parameters.

Each of the conversion methods allows a default value to be passed as an optional second argument.  The default value will be returned if a corresponding entry cannot be found in the map or if an error occurs during the conversion.  Example:

{code}
def total = params.int('total', 42)
{code}

These same type conversion methods are also available on the @attrs@ parameter of GSP tags.

h3. Handling Multi Parameters

A common use case is dealing with multiple request parameters of the same name. For example you could get a query string such as @?name=Bob&name=Judy@.

In this case dealing with one parameter and dealing with many has different semantics since Groovy's iteration mechanics for @String@ iterate over each character. To avoid this problem the [params|controllers] object provides a @list@ method that always returns a list:

{code}
for (name in params.list('name')) {
    println name
}
{code}
