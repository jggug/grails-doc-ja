Grails has built-in support for handling duplicate form submissions using the "Synchronizer Token Pattern". To get started you define a token on the [form|tags] tag:

{code:xml}
<g:form useToken="true" ...>
{code}

Then in your controller code you can use the [withForm|controllers] method to handle valid and invalid requests:

{code:java}
withForm {
   // good request
}.invalidToken {
   // bad request
}
{code}

If you only provide the [withForm|controllers] method and not the chained @invalidToken@ method then by default Grails will store the invalid token in a @flash.invalidToken@ variable and redirect the request back to the original page. This can then be checked in the view:

{code:xml}
<g:if test="${flash.invalidToken}">
  Don't click the button twice!
</g:if>
{code}

{warning}
The [withForm|controllers] tag makes use of the [session|controllers] and hence requires session affinity or clustered sessions if used in a cluster.
{warning}
