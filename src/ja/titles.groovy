//grails doc japanese properties
titles = [
'1. Introduction':'1. イントロダクション',
'10. Internationalization':'10. 国際化',
'10.1 Understanding Message Bundles':'10.1 メッセージバンドルを理解する',
'10.2 Changing Locales':'10.2 ロケールの変更',
'10.3 Reading Messages':'10.3 メッセージ読込',
'10.4 Scaffolding and i18n':'10.4 スカッフォルドとi18n',
'11. Security':'11. セキュリティ',
'11.1 Securing Against Attacks':'11.1 アタックに対するセキュリティー',
'11.2 Encoding and Decoding Objects':'11.2 オブジェクトのエンコードとデコード',
'11.3 Authentication':'11.3 認証',
'11.4 Security Plug-ins':'11.4 セキュリティー(認証・認可)プラグイン',
'11.4.1 Acegi':'11.4.1 Acegi(Spring Security)',
'11.4.2 JSecurity':'11.4.2 JSecurity',
'12. Plug-ins':'12. プラグイン',
'12.1 Creating and Installing Plug-ins':'12.1 プラグインの作成、インストール',
'12.10 Understanding Plug-in Load Order':'12.10 プラグインのロード順を理解する',
'12.2 Plugin Repositories':'12.2 プラグインリポジトリ',
'12.3 Understanding a Plug-ins Structure':'12.3 プラグイン構造を理解する',
'12.4 Providing Basic Artefacts':'12.4 基本アーティファクトの提供',
'12.8 Adding Dynamic Methods at Runtime':'12.8 起動時のダイナミックメソッド追加',
'13. Web Services':'13. Webサービス',
'13.1 REST':'13.1 REST',
'13.2 SOAP':'13.2 SOAP',
'13.3 RSS and Atom':'13.3 RSSとAtom',
'14. Grails and Spring':'14. GrailsとSpring',
'14.1 The Underpinnings of Grails':'14.1 Grailsの土台',
'14.2 Configuring Additional Beans':'14.2 追加ビーンを定義する',
'14.3 Runtime Spring with the Beans DSL':'14.3 ビーンDSLでSpringランタイム',
'14.4 The BeanBuilder DSL Explained':'14.4 ビーンビルダーDSL の解説',
'14.5 Property Placeholder Configuration':'プロパティプレースフォルダー設定',
'14.6 Property Override Configuration':'14.6 プロパティオーバーライド設定',
'14.7 Using Spring MVC Controllers':'14.7 Spring MVCコントローラを使う',
'15. Grails and Hibernate':'15. GrailsとHibernate',
'15.1 Mapping with Hibernate Annotations':'15.1 Hibernateアノテーションでのマッピング',
'15.2 Further Reading':'15.2 オススメ記事',
'16. Scaffolding':'16. スカッフォルド',
'17. Deployment':'17. デプロイ',
'2. Getting Started':'2. はじめに',
'2.1 Downloading and Installing':'2.1 ダウンロードとインストール',
'2.10 Creating Artefacts':'2.10 アーティファクトの作成',
'2.10 Supported Java EE Containers':'2.10 サポートされている Java EE コンテナ',
'2.11 Generating an Application':'2.11 アプリケーション生成',
'2.2 Upgrading from previous versions of Grails':'2.2 Grails下位バージョンからの更新',
'2.3 Creating an Application':'2.3 アプリケーション作成',
'2.4 A Hello World Example':'2.4 ハローワールド例',
'2.5 Getting Set-up in an IDE':'2.5 IDEの設定',
'2.6 Convention over Configuration':'2.6 Convention over Configuration 設定より規約',
'2.7 Running an Application':'2.7 アプリケーションの起動',
'2.8 Testing an Application':'2.8 アプリケーションのテスト',
'2.9 Deploying an Application':'2.9 アプリケーションのデプロイ',
'3. Configuration':'3. 設定',
'3.1 Basic Configuration':'3.1 基本設定',
'3.1.1 Built in options':'3.1.1 組込オプション',
'3.1.2 Logging':'3.1.2 ロギング',
'3.1.3 GORM':'3.1.3 GORM',
'3.2 Environments':'3.2 環境',
'3.3 The DataSource':'3.3 データソース',
'3.3.1 DataSources and Environments':'3.3.1 データソースと環境',
'3.3.2 JNDI DataSources':'3.3.2 JNDI データソース',
'3.3.3 Automatic Database Migration':'3.3.3 自動データベースマイグレーション',
'3.4 Externalized Configuration':'3.4 設定の外部化',
'3.5 Versioning':'3.5 バージョニング',
'3.6 Project Documentation':'3.6 プロジェクト ドキュメント',
'3.7 Dependency Resolution':'3.7 依存性解決',
'3.7.1 Configurations and Dependencies':'3.7.1 設定と依存',
'3.7.2 Dependency Repositories':'3.7.2 リポジトリ',
'3.7.3 Debugging Resolution':'3.7.3 デバッグ',
'3.7.4 Inherited Dependencies':'3.7.4 依存性の受け継ぎ',
'3.7.5 Dependency Reports':'3.7.5 依存性リポート',
'3.7.6 Plugin JAR Dependencies':'3.7.6 プラグインJAR依存',
'3.7.7 Maven Integration':'3.7.7 Maven統合',
'3.7.8 Deploying to a Maven Repository':'3.7.8 Mavenリポジトリへのデプロイ',
'3.7.9 Plugin Dependencies':'3.7.9 プラグインの依存性管理',
'4. The Command Line':'4. コマンドライン',
'4.1 Creating Gant Scripts':'4.1 Gantスクリプトの作成',
'4.2 Re-using Grails scripts':'4.2 Grailsスクリプトの再利用',
'4.3 Hooking into Events':'4.3 イベントを取得する',
'4.4 Customising the build':'4.4 ビルドのカスタマイズ',
'4.5 Ant and Maven':'4.5 AntとMaven',
'5. Object Relational Mapping (GORM)':'5. O/Rマッピング (GORM)',
'5.1 Quick Start Guide':'5.1 クイックスタートガイド',
'5.1.1 Basic CRUD':'5.1.1 基本CRUD',
'5.2 Domain Modelling in GORM':'5.2 GORMでのドメインモデリング',
'5.2.1 Association in GORM':'5.2.1 GORMでのアソシエーション',
'5.2.1.1 One-to-one':'5.2.1.1 1対1 One-to-one',
'5.2.1.2 One-to-many':'5.2.1.2 1対多 One-to-many',
'5.2.1.3 Many-to-many':'5.2.1.3 多対多 Many-to-many',
'5.2.1.4 Basic Collection Types':'5.2.1.4 基本型コレクション',
'5.2.2 Composition in GORM':'5.2.2 コンポジション',
'5.2.3 Inheritance in GORM':'5.2.3 継承',
'5.2.4 Sets, Lists and Maps':'5.2.4 セット、リスト、マップ',
'5.3 Persistence Basics':'5.3 永続化の基礎',
'5.3.1 Saving and Updating':'5.3.1 保存と更新',
'5.3.2 Deleting Objects':'5.3.2 オブジェクトの削除',
'5.3.3 Understanding Cascading Updates and Deletes':'5.3.3 カスケード更新削除を理解する',
'5.3.4 Eager and Lazy Fetching':'5.3.4 EagerとLazyフェッチング',
'5.3.5 Pessimistic and Optimistic Locking':'5.3.5 悲観的(Pessimistic)と楽観的(Optimistic)ロック',
'5.4 Querying with GORM':'5.4 GORMでクエリー',
'5.4.1 Dynamic Finders':'5.4.1 ダイナミックファインダー',
'5.4.2 Criteria':'5.4.2 クライテリア',
'5.4.3 Hibernate Query Language (HQL)':'5.4.3 Hibernateクエリー言語 (HQL)',
'5.5 Advanced GORM Features':'5.5 高度なGORMの機能',
'5.5.1 Events and Auto Timestamping':'5.5.1 イベントと自動タイムスタンプ',
'5.5.2 Custom ORM Mapping':'5.5.2 カスタムORマッピング',
'5.5.2.1 Table and Column Names':'5.5.2.1 テーブル名、カラム名',
'5.5.2.10 Custom Hibernate Types':'5.5.2.10 Hibernateユーザ定義型',
'5.5.2.11 Derived Properties':'5.5.2.11 派生プロパティ',
'5.5.2.2 Caching Strategy':'5.5.2.2 キャッシングストラテジー',
'5.5.2.3 Inheritance Strategies':'5.5.2.3 継承ストラテジー',
'5.5.2.4 Custom Database Identity':'5.5.2.4 カスタムデータベースアイデンティティー',
'5.5.2.5 Composite Primary Keys':'5.5.2.5 プライマリキー合成',
'5.5.2.6 Database Indices':'5.5.2.6 データベースインデックス',
'5.5.2.7 Optimistic Locking and Versioning':'5.5.2.7 楽観的ロックとバージョニング',
'5.5.2.8 Eager and Lazy Fetching':'5.5.2.8 EagerとLazyフェッチング',
'5.5.2.9 Custom Cascade Behaviour':'5.5.2.9 カスケードの振る舞いを変える',
'5.5.3 Default Sort Order':'5.5.3 デフォルトソート順',
'5.6 Programmatic Transactions':'5.6 プログラマチックトランザクション',
'5.7 GORM and Constraints':'5.7 GORM と制約',
'6. The Web Layer':'6. Webレイヤ',
'6.1 Controllers':'6.1 コントローラ',
'6.1.1 Understanding Controllers and Actions':'6.1.1 コントローラとアクションを理解する',
'6.1.10 Command Objects':'6.1.10 コマンドオブジェクト',
'6.1.11 2重フォーム送信の制御':'',
'6.1.12 Simple Type Converters':'6.1.12 シンプル型コンバータ',
'6.1.2 Controllers and Scopes':'6.1.2 コントローラとスコープ',
'6.1.3 Models and Views':'6.1.3 モデルとビュー',
'6.1.4 Redirects and Chaining':'6.1.4 リダイレクトとチェイニング',
'6.1.5 Controller Interceptors':'6.1.5 コントローラインターセプター',
'6.1.6 Data Binding':'6.1.6 データバインディング',
'6.1.7 XML and JSON Responses':'6.1.7 XMLとJSONでのレスポンス',
'6.1.8 More on JSONBuilder':'6.1.8 JSONBuilder',
'6.1.9 Uploading Files':'6.1.9 ファイルのアップロード',
'6.2 Groovy Server Pages':'6.2 Groovy Server Pages',
'6.2.1 GSP Basics':'6.2.1 GSPの基礎',
'6.2.1.1 Variables and Scopes':'6.2.1.1 変数とスコープ',
'6.2.1.2 Logic and Iteration':'6.2.1.2 制御とイテレート',
'6.2.1.3 Page Directives':'6.2.1.3 Pageディレクティブ',
'6.2.1.4 Expressions':'6.2.1.4 エクスプレッション (式言語)',
'6.2.2 GSP Tags':'6.2.2 GSPタグ',
'6.2.2.1 Variables and Scopes':'6.2.2.1 変数とスコープ',
'6.2.2.2 Logic and Iteration':'6.2.2.2 制御とイテレート',
'6.2.2.3 Search and Filtering':'6.2.2.3 検索とフィルタリング',
'6.2.2.4 Links and Resources':'6.2.2.4 リンクとリソース',
'6.2.2.5 Forms and Fields':'6.2.2.5 フォームとフィールド',
'6.2.2.6 Tags as Method Calls':'6.2.2.6 タグをメソッドとして呼び出す',
'6.2.3 Views and Templates':'6.2.3 ビューとテンプレート',
'6.2.4 Layouts with Sitemesh':'6.2.4 Sitemeshでのレイアウト',
'6.2.5 Sitemesh Content Blocks':'6.2.5 Sitemeshコンテントブロック',
'6.3 Tag Libraries':'6.3 タグライブラリ',
'6.3.1 Variables and Scopes':'6.3.1 変数とスコープ',
'6.3.2 Simple Tags':'6.3.2 簡単なタグ',
'6.3.3 Logical Tags':'6.3.3 制御タグ',
'6.3.4 Iterative Tags':'6.3.4 イテレートタグ',
'6.3.5 Tag Namespaces':'6.3.5 タグネームスペース',
'6.3.6 Using JSP Tag Libraries':'6.3.6 JSPタグライブラリを使う',
'6.3.7 Tag return value':'6.3.7 タグの戻り値',
'6.4 URL Mappings':'6.4 URLマッピング',
'6.4.1 Mapping to Controllers and Actions':'6.4.1 コントローラとアクションにマッピング',
'6.4.2 Embedded Variables':'6.4.2 変数を埋込',
'6.4.3 Mapping to Views':'6.4.3 ビューへマッピング',
'6.4.4 Mapping to Response Codes':'6.4.4 レスポンスコードへマッピング',
'6.4.5 Mapping to HTTP methods':'6.4.5 HTTPメソッドへマッピング',
'6.4.6 Mapping Wildcards':'6.4.6 マッピングワイルドカード',
'6.4.7 Automatic Link Re-Writing':'6.4.7 自動リンクリライト',
'6.4.8 Applying Constraints':'6.4.8 制約を適用',
'6.4.9 Named URL Mappings':'6.4.9 名前つきURLマッピング',
'6.5 Web Flow':'6.5 Webフロー',
'6.5.1 Start and End States':'6.5.1 開始と終了のステート',
'6.5.2 Action States and View States':'6.5.2 アクションステートとビューステート',
'6.5.3 Flow Execution Events':'6.5.3 Flow Execution Events',
'6.5.4 Flow Scopes':'6.5.4 スローのスコープ',
'6.5.5 Data Binding and Validation':'6.5.5 データバインディングとバリデーション',
'6.5.6 Subflows and Conversations':'6.5.6 Subflows and Conversations',
'6.6 Filters':'6.6 フィルター',
'6.6.1 Applying Filters':'6.6.1 フィルタを適用する',
'6.6.2 Filter Types':'6.6.2 フィルタの種類',
'6.6.3 Variables and Scopes':'6.6.3 変数とスコープ',
'6.7 Ajax':'6.7 Ajax',
'6.7.1 Ajax using Prototype':'6.7.1 Prototypeを使用したAjax',
'6.7.1.1 Remoting Linking':'6.7.1.1 リモートリンク',
'6.7.1.2 Updating Content':'6.7.1.2 コンテンツの更新',
'6.7.1.3 Remote Form Submission':'6.7.1.3 リモートフォーム送信',
'6.7.1.4 Ajax Events':'6.7.1.4 Ajaxイベント',
'6.7.2 Ajax with Dojo':'6.7.2 DojoでのAjax',
'6.7.3 Ajax with GWT':'6.7.3 GWTでのAjax',
'6.7.4 Ajax on the Server':'6.7.4 Ajax時のサーバサイド',
'6.8 Content Negotiation':'6.8 コンテントネゴシエーション',
'7. Validation':'7. バリデーション',
'7.1 Declaring Constraints':'7.1 制約を宣言',
'7.2 Validating Constraints':'7.2 制約をバリデートする',
'7.3 Validation on the Client':'7.3 クライアントサイド',
'7.4 Validation and Internationalization':'7.4 バリデーションの国際化',
'7.5 Validation Non Domain and Command Object Classes':'7.5 コマンドオブジェクト、ドメインクラス以外のバリデーション',
'8. The Service Layer':'8. サービスレイヤー',
'8.1 Declarative Transactions':'8.1 断定的なトランザクション',
'8.2 Scoped Services':'8.2 サービスのスコープ',
'8.3 Dependency Injection and Services':'8.3 依存注入とサービス',
'8.4 Using Services from Java':'8.4 Javaからサービスを使う',
'9. Testing':'9. テスト',
'9.1 Unit Testing':'9.1 ユニットテスト Unit Testing',
'9.2 Integration Testing':'9.2 統合テスト Integration Testing',
'9.3 Functional Testing':'9.3 機能テスト Functional Testing',

'11.4.1 Spring Security':'11.4.1 Spring Security',
'11.4.2 Shiro':'11.4.2 Shiro',
'12.5 Evaluating Conventions':'12.5 Evaluating Conventions',
'12.6 Hooking into Build Events':'12.6 ビルドイベントの取得',
'12.7 Hooking into Runtime Configuration':'12.7 Hooking into Runtime Configuration',
'12.9 Participating in Auto Reload Events':'12.9 Participating in Auto Reload Events',
'15.1 Using Hibernate XML Mapping Files':'15.1 HibernateマッピングXMLファイルを使用する',
'15.2 Mapping with Hibernate Annotations':'15.2 Hibernate Annotationsでのマッピング',
'15.3 Adding Constraints':'15.3 制約の追加',
'15.4 Further Reading':'15.4 参考資料',
'2.12 Creating Artefacts':'2.12 アーティファクトの生成',
'3.3.4 Transaction-aware DataSource Proxy':'3.3.4 Transaction-aware DataSource Proxy',
'3.3.5 Database Console':'3.3.5 データベースコンソール',
'3.7.10 Plugin Dependencies':'3.7.10 プラグイン依存関係',
'3.7.5 Providing Default Dependencies':'3.7.5 Providing Default Dependencies',
'3.7.6 Dependency Reports':'3.7.6 Dependency Reports',
'3.7.7 Plugin JAR Dependencies':'3.7.7 Plugin JAR Dependencies',
'3.7.8 Maven Integration':'3.7.8 Maven Integration',
'3.7.9 Deploying to a Maven Repository':'3.7.9 Deploying to a Maven Repository',
'5.2.1.1 Many-to-one and one-to-one':'5.2.1.1 Many-to-one and one-to-one',
'5.3.6 Modification Checking':'5.3.6 Modification Checking',
'5.5.2.12 Custom Naming Strategy':'5.5.2.12 Custom Naming Strategy',
'6.1.11 Handling Duplicate Form Submissions':'6.1.11 Handling Duplicate Form Submissions',
'6.2.6 Making Changes to a Deployed Application':'6.2.6 Making Changes to a Deployed Application',
'6.2.7 GSP Debugging':'6.2.7 GSPデバッグ',
'6.6.4 Filter Dependencies':'6.6.4 Filter Dependencies'
]
refTitle = [
'Command Line':'コマンドライン',
'Constraints':'制約',
'Controllers':'コントローラ',
'Database Mapping':'データベースマッピング',
'Domain Classes':'ドメインクラス',
'Plug-ins':'プラグイン',
'Services':'サービス',
'Servlet API':'サーブレットAPI',
'Tag Libraries':'タグライブラリ変数',
'Tags':'タグ',
'Usage':'使用方法'
]
props = [
title: 'The Grails Framework',
subtitle: 'See the light - agile, industrial strength, rapid web application development made easy',
footer: '  Japanese version by Japan Grails Groovy User Group jggug.org',
authors: '  日本語版: T.Yamamoto(@tyama) ',
copyright:' <br/><span style="color:red">このドキュメントの内容はスナップショットバージョンを元に意訳されているため、一部現行バージョンでは未対応の機能もあります。</span>'
]